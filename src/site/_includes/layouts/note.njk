---
permalink: "notes/{{ page.fileSlug | slugify }}/"
---
<!DOCTYPE html>
<html lang="{{ meta.mainLanguage }}">
  <head>
    <title>{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</title>
    {%include "components/pageheader.njk"%}
    {% for imp in dynamics.common.head %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.notes.head %}
      {% include imp %}
    {% endfor %}
  </head>
  <body class="theme-{{meta.baseTheme}} markdown-preview-view markdown-rendered markdown-preview-section {{meta.bodyClasses}}">
    {%include "components/notegrowthhistory.njk"%}

    {% if settings.dgShowFileTree !== true %}
      {%include "components/navbar.njk"%}
    {%else%}
      {%include "components/filetree.njk"%}
    {% endif %}

    {% if settings.dgEnableSearch === true %}
      {%include "components/searchContainer.njk"%}
    {% endif %}

    <main class="content cm-s-obsidian {{contentClasses}}">
      <header>
        {% if settings.dgShowInlineTitle === true %}
          <h1 data-note-icon="{% if noteIcon %}{{noteIcon}}{% else %}{{meta.noteIconsSettings.default}}{% endif %}">{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</h1>
        {% endif %}
        <div class="header-meta">
          {% if settings.dgShowTags === true and tags %}
            <div class="header-tags">
              {% for tag in tags %}
                {% if tag != 'gardenEntry' and tag !='note' %}
                  <a class="tag" onclick="toggleTagSearch(this)">
                    #{{tag}}
                  </a>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}
          {%- if meta.timestampSettings.showCreated or meta.timestampSettings.showUpdated -%}
          <div class="timestamps">
            {%- if meta.timestampSettings.showCreated and created -%}
            <div><i icon-name="calendar-plus"></i> <span class="human-date" data-date="{{created}}"></span></div>
            {%- endif -%}
            {%- if meta.timestampSettings.showUpdated and updated -%}
            <div><i icon-name="calendar-clock"></i> <span class="human-date" data-date="{{updated}}"></span></div>
            {%- endif -%}
          </div>
          {%- endif -%}
        </div>
      {% for imp in dynamics.common.header %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.notes.header %}
        {% include imp %}
      {% endfor %}
      </header>
      {% for imp in dynamics.common.beforeContent %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.notes.beforeContent %}
        {% include imp %}
      {% endfor %}
      {{ content | hideDataview | taggify | link | safe}}
      {% for imp in dynamics.common.afterContent %}
        {% include imp %}
      {% endfor %}
      {% for imp in dynamics.notes.afterContent %}
        {% include imp %}
      {% endfor %}
    </main>

    {% if settings.dgShowBacklinks === true or settings.dgShowLocalGraph === true or settings.dgShowToc === true%}
      {%include "components/sidebar.njk"%}
    {% endif %}

    {% if settings.dgLinkPreview === true %}
      {%include "components/linkPreview.njk"%}
    {% endif %}
    {% include "components/references.njk" %}
    {% include "components/timestamps.njk" %}
    {% for imp in dynamics.common.footer %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.notes.footer %}
      {% include imp %}
    {% endfor %}
    {%include "components/lucideIcons.njk"%}
  </body>
</html>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // 图片点击预览功能
  document.querySelectorAll('.img-container').forEach(container => {
    const imgSrc = container.getAttribute('data-src');
    const imgAlt = container.getAttribute('data-alt');

    // 创建图片元素
    const img = new Image();
    img.src = imgSrc;
    img.alt = imgAlt;
    img.className = 'img-loaded';

    // 图片加载完成后移除加载状态
    img.onload = () => {
      const loading = container.querySelector('.img-loading');
      if (loading) loading.style.display = 'none';
      container.appendChild(img);

      // 添加点击事件
      container.addEventListener('click', function(e) {
        if (e.target.classList.contains('img-loaded')) {
          const preview = container.querySelector('.img-preview-wrapper');
          if (preview) {
            const previewImg = preview.querySelector('.img-preview-main');
            if (previewImg) previewImg.src = imgSrc;
            preview.classList.add('active');
          }
        }
      });
    };

    // 处理加载错误
    img.onerror = () => {
      const loading = container.querySelector('.img-loading');
      if (loading) {
        loading.innerHTML = `
          <div class="img-error">
            <svg width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"></circle>
              <line x1="12" y1="8" x2="12" y2="12"></line>
              <line x1="12" y1="16" x2="12.01" y2="16"></line>
            </svg>
            <div>图片加载失败</div>
          </div>
        `;
      }
    };
  });

  // 关闭预览
  document.addEventListener('click', function(e) {
    if (e.target.classList.contains('img-preview-overlay') ||
        e.target.classList.contains('img-preview-close')) {
      document.querySelectorAll('.img-preview-wrapper').forEach(preview => {
        preview.classList.remove('active');
      });
    }
  });

  // 支持键盘操作
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      document.querySelectorAll('.img-preview-wrapper').forEach(preview => {
        preview.classList.remove('active');
      });
    }
  });

  // 图片缩放功能
  document.addEventListener('wheel', function(e) {
    const activePreview = document.querySelector('.img-preview-wrapper.active');
    if (activePreview) {
      e.preventDefault();
      const previewImg = activePreview.querySelector('.img-preview-main');
      if (previewImg) {
        const currentScale = parseFloat(previewImg.style.transform.replace('scale(', '') || 1);
        const newScale = e.deltaY > 0 ?
          Math.max(0.5, currentScale - 0.1) :
          Math.min(3, currentScale + 0.1);
        previewImg.style.transform = `scale(${newScale})`;
      }
    }
  }, { passive: false });
});
</script>
